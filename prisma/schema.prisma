generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin_permissions {
  id                                                       Int                            @id @default(autoincrement()) @db.UnsignedInt
  action                                                   String?                        @db.VarChar(255)
  action_parameters                                        Json?
  subject                                                  String?                        @db.VarChar(255)
  properties                                               Json?
  conditions                                               Json?
  created_at                                               DateTime?                      @db.DateTime(6)
  updated_at                                               DateTime?                      @db.DateTime(6)
  created_by_id                                            Int?                           @db.UnsignedInt
  updated_by_id                                            Int?                           @db.UnsignedInt
  admin_users_admin_permissions_created_by_idToadmin_users admin_users?                   @relation("admin_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "admin_permissions_created_by_id_fk")
  admin_users_admin_permissions_updated_by_idToadmin_users admin_users?                   @relation("admin_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "admin_permissions_updated_by_id_fk")
  admin_permissions_role_links                             admin_permissions_role_links[]

  @@index([created_by_id], map: "admin_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "admin_permissions_updated_by_id_fk")
}

model admin_permissions_role_links {
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  permission_id     Int?               @db.UnsignedInt
  role_id           Int?               @db.UnsignedInt
  permission_order  Float?
  admin_permissions admin_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "admin_permissions_role_links_fk")
  admin_roles       admin_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "admin_permissions_role_links_inv_fk")

  @@unique([permission_id, role_id], map: "admin_permissions_role_links_unique")
  @@index([permission_id], map: "admin_permissions_role_links_fk")
  @@index([role_id], map: "admin_permissions_role_links_inv_fk")
  @@index([permission_order], map: "admin_permissions_role_links_order_inv_fk")
}

model admin_roles {
  id                                                 Int                            @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?                        @db.VarChar(255)
  code                                               String?                        @db.VarChar(255)
  description                                        String?                        @db.VarChar(255)
  created_at                                         DateTime?                      @db.DateTime(6)
  updated_at                                         DateTime?                      @db.DateTime(6)
  created_by_id                                      Int?                           @db.UnsignedInt
  updated_by_id                                      Int?                           @db.UnsignedInt
  admin_permissions_role_links                       admin_permissions_role_links[]
  admin_users_admin_roles_created_by_idToadmin_users admin_users?                   @relation("admin_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "admin_roles_created_by_id_fk")
  admin_users_admin_roles_updated_by_idToadmin_users admin_users?                   @relation("admin_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "admin_roles_updated_by_id_fk")
  admin_users_roles_links                            admin_users_roles_links[]

  @@index([created_by_id], map: "admin_roles_created_by_id_fk")
  @@index([updated_by_id], map: "admin_roles_updated_by_id_fk")
}

model admin_users {
  id                                                                                             Int                                 @id @default(autoincrement()) @db.UnsignedInt
  firstname                                                                                      String?                             @db.VarChar(255)
  lastname                                                                                       String?                             @db.VarChar(255)
  username                                                                                       String?                             @db.VarChar(255)
  email                                                                                          String?                             @db.VarChar(255)
  password                                                                                       String?                             @db.VarChar(255)
  reset_password_token                                                                           String?                             @db.VarChar(255)
  registration_token                                                                             String?                             @db.VarChar(255)
  is_active                                                                                      Boolean?
  blocked                                                                                        Boolean?
  prefered_language                                                                              String?                             @db.VarChar(255)
  created_at                                                                                     DateTime?                           @db.DateTime(6)
  updated_at                                                                                     DateTime?                           @db.DateTime(6)
  created_by_id                                                                                  Int?                                @db.UnsignedInt
  updated_by_id                                                                                  Int?                                @db.UnsignedInt
  admin_permissions_admin_permissions_created_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_created_by_idToadmin_users")
  admin_permissions_admin_permissions_updated_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_updated_by_idToadmin_users")
  admin_roles_admin_roles_created_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_created_by_idToadmin_users")
  admin_roles_admin_roles_updated_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_updated_by_idToadmin_users")
  admin_users_admin_users_created_by_idToadmin_users                                             admin_users?                        @relation("admin_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "admin_users_created_by_id_fk")
  other_admin_users_admin_users_created_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_created_by_idToadmin_users")
  admin_users_admin_users_updated_by_idToadmin_users                                             admin_users?                        @relation("admin_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "admin_users_updated_by_id_fk")
  other_admin_users_admin_users_updated_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_updated_by_idToadmin_users")
  admin_users_roles_links                                                                        admin_users_roles_links[]
  files_files_created_by_idToadmin_users                                                         files[]                             @relation("files_created_by_idToadmin_users")
  files_files_updated_by_idToadmin_users                                                         files[]                             @relation("files_updated_by_idToadmin_users")
  i18n_locale_i18n_locale_created_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_created_by_idToadmin_users")
  i18n_locale_i18n_locale_updated_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_updated_by_idToadmin_users")
  notes_notes_created_by_idToadmin_users                                                         notes[]                             @relation("notes_created_by_idToadmin_users")
  notes_notes_updated_by_idToadmin_users                                                         notes[]                             @relation("notes_updated_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_created_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_created_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_updated_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_updated_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_created_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_created_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_updated_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_updated_by_idToadmin_users")
  strapi_release_actions_strapi_release_actions_created_by_idToadmin_users                       strapi_release_actions[]            @relation("strapi_release_actions_created_by_idToadmin_users")
  strapi_release_actions_strapi_release_actions_updated_by_idToadmin_users                       strapi_release_actions[]            @relation("strapi_release_actions_updated_by_idToadmin_users")
  strapi_releases_strapi_releases_created_by_idToadmin_users                                     strapi_releases[]                   @relation("strapi_releases_created_by_idToadmin_users")
  strapi_releases_strapi_releases_updated_by_idToadmin_users                                     strapi_releases[]                   @relation("strapi_releases_updated_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_created_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_created_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_updated_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_created_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_created_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_updated_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_updated_by_idToadmin_users")
  up_permissions_up_permissions_created_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_created_by_idToadmin_users")
  up_permissions_up_permissions_updated_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_updated_by_idToadmin_users")
  up_roles_up_roles_created_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_created_by_idToadmin_users")
  up_roles_up_roles_updated_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_updated_by_idToadmin_users")
  up_users_up_users_created_by_idToadmin_users                                                   up_users[]                          @relation("up_users_created_by_idToadmin_users")
  up_users_up_users_updated_by_idToadmin_users                                                   up_users[]                          @relation("up_users_updated_by_idToadmin_users")
  upload_folders_upload_folders_created_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_created_by_idToadmin_users")
  upload_folders_upload_folders_updated_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_updated_by_idToadmin_users")

  @@index([created_by_id], map: "admin_users_created_by_id_fk")
  @@index([updated_by_id], map: "admin_users_updated_by_id_fk")
}

model admin_users_roles_links {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int?         @db.UnsignedInt
  role_id     Int?         @db.UnsignedInt
  role_order  Float?
  user_order  Float?
  admin_users admin_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "admin_users_roles_links_fk")
  admin_roles admin_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "admin_users_roles_links_inv_fk")

  @@unique([user_id, role_id], map: "admin_users_roles_links_unique")
  @@index([user_id], map: "admin_users_roles_links_fk")
  @@index([role_id], map: "admin_users_roles_links_inv_fk")
  @@index([role_order], map: "admin_users_roles_links_order_fk")
  @@index([user_order], map: "admin_users_roles_links_order_inv_fk")
}

model files {
  id                                           Int                    @id @default(autoincrement()) @db.UnsignedInt
  name                                         String?                @db.VarChar(255)
  alternative_text                             String?                @db.VarChar(255)
  caption                                      String?                @db.VarChar(255)
  width                                        Int?
  height                                       Int?
  formats                                      Json?
  hash                                         String?                @db.VarChar(255)
  ext                                          String?                @db.VarChar(255)
  mime                                         String?                @db.VarChar(255)
  size                                         Decimal?               @db.Decimal(10, 2)
  url                                          String?                @db.VarChar(255)
  preview_url                                  String?                @db.VarChar(255)
  provider                                     String?                @db.VarChar(255)
  provider_metadata                            Json?
  folder_path                                  String?                @db.VarChar(255)
  created_at                                   DateTime?              @db.DateTime(6)
  updated_at                                   DateTime?              @db.DateTime(6)
  created_by_id                                Int?                   @db.UnsignedInt
  updated_by_id                                Int?                   @db.UnsignedInt
  admin_users_files_created_by_idToadmin_users admin_users?           @relation("files_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "files_created_by_id_fk")
  admin_users_files_updated_by_idToadmin_users admin_users?           @relation("files_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "files_updated_by_id_fk")
  files_folder_links                           files_folder_links[]
  files_related_morphs                         files_related_morphs[]

  @@index([created_by_id], map: "files_created_by_id_fk")
  @@index([updated_by_id], map: "files_updated_by_id_fk")
  @@index([created_at], map: "upload_files_created_at_index")
  @@index([ext], map: "upload_files_ext_index")
  @@index([folder_path], map: "upload_files_folder_path_index")
  @@index([name], map: "upload_files_name_index")
  @@index([size], map: "upload_files_size_index")
  @@index([updated_at], map: "upload_files_updated_at_index")
}

model files_folder_links {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  file_id        Int?            @db.UnsignedInt
  folder_id      Int?            @db.UnsignedInt
  file_order     Float?
  files          files?          @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "files_folder_links_fk")
  upload_folders upload_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "files_folder_links_inv_fk")

  @@unique([file_id, folder_id], map: "files_folder_links_unique")
  @@index([file_id], map: "files_folder_links_fk")
  @@index([folder_id], map: "files_folder_links_inv_fk")
  @@index([file_order], map: "files_folder_links_order_inv_fk")
}

model files_related_morphs {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  file_id      Int?    @db.UnsignedInt
  related_id   Int?    @db.UnsignedInt
  related_type String? @db.VarChar(255)
  field        String? @db.VarChar(255)
  order        Float?
  files        files?  @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "files_related_morphs_fk")

  @@index([file_id], map: "files_related_morphs_fk")
  @@index([related_id], map: "files_related_morphs_id_column_index")
  @@index([order], map: "files_related_morphs_order_index")
}

model i18n_locale {
  id                                                 Int          @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?      @db.VarChar(255)
  code                                               String?      @db.VarChar(255)
  created_at                                         DateTime?    @db.DateTime(6)
  updated_at                                         DateTime?    @db.DateTime(6)
  created_by_id                                      Int?         @db.UnsignedInt
  updated_by_id                                      Int?         @db.UnsignedInt
  admin_users_i18n_locale_created_by_idToadmin_users admin_users? @relation("i18n_locale_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "i18n_locale_created_by_id_fk")
  admin_users_i18n_locale_updated_by_idToadmin_users admin_users? @relation("i18n_locale_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "i18n_locale_updated_by_id_fk")

  @@index([created_by_id], map: "i18n_locale_created_by_id_fk")
  @@index([updated_by_id], map: "i18n_locale_updated_by_id_fk")
}

model notes {
  id                                           Int          @id @default(autoincrement()) @db.UnsignedInt
  title                                        String?      @db.VarChar(255)
  content                                      String?      @db.LongText
  update_time                                  DateTime?    @db.DateTime(6)
  slug                                         String?      @unique(map: "notes_slug_unique") @db.VarChar(255)
  created_at                                   DateTime?    @db.DateTime(6)
  updated_at                                   DateTime?    @db.DateTime(6)
  published_at                                 DateTime?    @db.DateTime(6)
  created_by_id                                Int?         @db.UnsignedInt
  updated_by_id                                Int?         @db.UnsignedInt
  test333                                      String?      @db.VarChar(255)
  admin_users_notes_created_by_idToadmin_users admin_users? @relation("notes_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "notes_created_by_id_fk")
  admin_users_notes_updated_by_idToadmin_users admin_users? @relation("notes_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "notes_updated_by_id_fk")

  @@index([created_by_id], map: "notes_created_by_id_fk")
  @@index([updated_by_id], map: "notes_updated_by_id_fk")
}

model strapi_api_token_permissions {
  id                                                                  Int                                        @id @default(autoincrement()) @db.UnsignedInt
  action                                                              String?                                    @db.VarChar(255)
  created_at                                                          DateTime?                                  @db.DateTime(6)
  updated_at                                                          DateTime?                                  @db.DateTime(6)
  created_by_id                                                       Int?                                       @db.UnsignedInt
  updated_by_id                                                       Int?                                       @db.UnsignedInt
  admin_users_strapi_api_token_permissions_created_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_api_token_permissions_created_by_id_fk")
  admin_users_strapi_api_token_permissions_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_api_token_permissions_updated_by_id_fk")
  strapi_api_token_permissions_token_links                            strapi_api_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_api_token_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_token_permissions_updated_by_id_fk")
}

model strapi_api_token_permissions_token_links {
  id                           Int                           @id @default(autoincrement()) @db.UnsignedInt
  api_token_permission_id      Int?                          @db.UnsignedInt
  api_token_id                 Int?                          @db.UnsignedInt
  api_token_permission_order   Float?
  strapi_api_token_permissions strapi_api_token_permissions? @relation(fields: [api_token_permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_api_token_permissions_token_links_fk")
  strapi_api_tokens            strapi_api_tokens?            @relation(fields: [api_token_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_api_token_permissions_token_links_inv_fk")

  @@unique([api_token_permission_id, api_token_id], map: "strapi_api_token_permissions_token_links_unique")
  @@index([api_token_permission_id], map: "strapi_api_token_permissions_token_links_fk")
  @@index([api_token_id], map: "strapi_api_token_permissions_token_links_inv_fk")
  @@index([api_token_permission_order], map: "strapi_api_token_permissions_token_links_order_inv_fk")
}

model strapi_api_tokens {
  id                                                       Int                                        @id @default(autoincrement()) @db.UnsignedInt
  name                                                     String?                                    @db.VarChar(255)
  description                                              String?                                    @db.VarChar(255)
  type                                                     String?                                    @db.VarChar(255)
  access_key                                               String?                                    @db.VarChar(255)
  last_used_at                                             DateTime?                                  @db.DateTime(6)
  expires_at                                               DateTime?                                  @db.DateTime(6)
  lifespan                                                 BigInt?
  created_at                                               DateTime?                                  @db.DateTime(6)
  updated_at                                               DateTime?                                  @db.DateTime(6)
  created_by_id                                            Int?                                       @db.UnsignedInt
  updated_by_id                                            Int?                                       @db.UnsignedInt
  strapi_api_token_permissions_token_links                 strapi_api_token_permissions_token_links[]
  admin_users_strapi_api_tokens_created_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_api_tokens_created_by_id_fk")
  admin_users_strapi_api_tokens_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_api_tokens_updated_by_id_fk")

  @@index([created_by_id], map: "strapi_api_tokens_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_tokens_updated_by_id_fk")
}

model strapi_core_store_settings {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  key         String? @db.VarChar(255)
  value       String? @db.LongText
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model strapi_database_schema {
  id     Int       @id @default(autoincrement()) @db.UnsignedInt
  schema Json?
  time   DateTime? @db.DateTime(0)
  hash   String?   @db.VarChar(255)
}

model strapi_migrations {
  id   Int       @id @default(autoincrement()) @db.UnsignedInt
  name String?   @db.VarChar(255)
  time DateTime? @db.DateTime(0)
}

model strapi_release_actions {
  id                                                            Int                                    @id @default(autoincrement()) @db.UnsignedInt
  type                                                          String?                                @db.VarChar(255)
  target_id                                                     Int?                                   @db.UnsignedInt
  target_type                                                   String?                                @db.VarChar(255)
  content_type                                                  String?                                @db.VarChar(255)
  locale                                                        String?                                @db.VarChar(255)
  is_entry_valid                                                Boolean?
  created_at                                                    DateTime?                              @db.DateTime(6)
  updated_at                                                    DateTime?                              @db.DateTime(6)
  created_by_id                                                 Int?                                   @db.UnsignedInt
  updated_by_id                                                 Int?                                   @db.UnsignedInt
  admin_users_strapi_release_actions_created_by_idToadmin_users admin_users?                           @relation("strapi_release_actions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_release_actions_created_by_id_fk")
  admin_users_strapi_release_actions_updated_by_idToadmin_users admin_users?                           @relation("strapi_release_actions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_release_actions_updated_by_id_fk")
  strapi_release_actions_release_links                          strapi_release_actions_release_links[]

  @@index([created_by_id], map: "strapi_release_actions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_release_actions_updated_by_id_fk")
}

model strapi_release_actions_release_links {
  id                     Int                     @id @default(autoincrement()) @db.UnsignedInt
  release_action_id      Int?                    @db.UnsignedInt
  release_id             Int?                    @db.UnsignedInt
  release_action_order   Float?
  strapi_release_actions strapi_release_actions? @relation(fields: [release_action_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_release_actions_release_links_fk")
  strapi_releases        strapi_releases?        @relation(fields: [release_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_release_actions_release_links_inv_fk")

  @@unique([release_action_id, release_id], map: "strapi_release_actions_release_links_unique")
  @@index([release_action_id], map: "strapi_release_actions_release_links_fk")
  @@index([release_id], map: "strapi_release_actions_release_links_inv_fk")
  @@index([release_action_order], map: "strapi_release_actions_release_links_order_inv_fk")
}

model strapi_releases {
  id                                                     Int                                    @id @default(autoincrement()) @db.UnsignedInt
  name                                                   String?                                @db.VarChar(255)
  released_at                                            DateTime?                              @db.DateTime(6)
  scheduled_at                                           DateTime?                              @db.DateTime(6)
  timezone                                               String?                                @db.VarChar(255)
  status                                                 String?                                @db.VarChar(255)
  created_at                                             DateTime?                              @db.DateTime(6)
  updated_at                                             DateTime?                              @db.DateTime(6)
  created_by_id                                          Int?                                   @db.UnsignedInt
  updated_by_id                                          Int?                                   @db.UnsignedInt
  strapi_release_actions_release_links                   strapi_release_actions_release_links[]
  admin_users_strapi_releases_created_by_idToadmin_users admin_users?                           @relation("strapi_releases_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_releases_created_by_id_fk")
  admin_users_strapi_releases_updated_by_idToadmin_users admin_users?                           @relation("strapi_releases_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_releases_updated_by_id_fk")

  @@index([created_by_id], map: "strapi_releases_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_releases_updated_by_id_fk")
}

model strapi_transfer_token_permissions {
  id                                                                       Int                                             @id @default(autoincrement()) @db.UnsignedInt
  action                                                                   String?                                         @db.VarChar(255)
  created_at                                                               DateTime?                                       @db.DateTime(6)
  updated_at                                                               DateTime?                                       @db.DateTime(6)
  created_by_id                                                            Int?                                            @db.UnsignedInt
  updated_by_id                                                            Int?                                            @db.UnsignedInt
  admin_users_strapi_transfer_token_permissions_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_transfer_token_permissions_created_by_id_fk")
  admin_users_strapi_transfer_token_permissions_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_transfer_token_permissions_updated_by_id_fk")
  strapi_transfer_token_permissions_token_links                            strapi_transfer_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_transfer_token_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_transfer_token_permissions_updated_by_id_fk")
}

model strapi_transfer_token_permissions_token_links {
  id                                Int                                @id @default(autoincrement()) @db.UnsignedInt
  transfer_token_permission_id      Int?                               @db.UnsignedInt
  transfer_token_id                 Int?                               @db.UnsignedInt
  transfer_token_permission_order   Float?
  strapi_transfer_token_permissions strapi_transfer_token_permissions? @relation(fields: [transfer_token_permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_transfer_token_permissions_token_links_fk")
  strapi_transfer_tokens            strapi_transfer_tokens?            @relation(fields: [transfer_token_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "strapi_transfer_token_permissions_token_links_inv_fk")

  @@unique([transfer_token_permission_id, transfer_token_id], map: "strapi_transfer_token_permissions_token_links_unique")
  @@index([transfer_token_permission_id], map: "strapi_transfer_token_permissions_token_links_fk")
  @@index([transfer_token_id], map: "strapi_transfer_token_permissions_token_links_inv_fk")
  @@index([transfer_token_permission_order], map: "strapi_transfer_token_permissions_token_links_order_inv_fk")
}

model strapi_transfer_tokens {
  id                                                            Int                                             @id @default(autoincrement()) @db.UnsignedInt
  name                                                          String?                                         @db.VarChar(255)
  description                                                   String?                                         @db.VarChar(255)
  access_key                                                    String?                                         @db.VarChar(255)
  last_used_at                                                  DateTime?                                       @db.DateTime(6)
  expires_at                                                    DateTime?                                       @db.DateTime(6)
  lifespan                                                      BigInt?
  created_at                                                    DateTime?                                       @db.DateTime(6)
  updated_at                                                    DateTime?                                       @db.DateTime(6)
  created_by_id                                                 Int?                                            @db.UnsignedInt
  updated_by_id                                                 Int?                                            @db.UnsignedInt
  strapi_transfer_token_permissions_token_links                 strapi_transfer_token_permissions_token_links[]
  admin_users_strapi_transfer_tokens_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "strapi_transfer_tokens_created_by_id_fk")
  admin_users_strapi_transfer_tokens_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "strapi_transfer_tokens_updated_by_id_fk")

  @@index([created_by_id], map: "strapi_transfer_tokens_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_transfer_tokens_updated_by_id_fk")
}

model strapi_webhooks {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  name    String?  @db.VarChar(255)
  url     String?  @db.LongText
  headers Json?
  events  Json?
  enabled Boolean?
}

model up_permissions {
  id                                                    Int                         @id @default(autoincrement()) @db.UnsignedInt
  action                                                String?                     @db.VarChar(255)
  created_at                                            DateTime?                   @db.DateTime(6)
  updated_at                                            DateTime?                   @db.DateTime(6)
  created_by_id                                         Int?                        @db.UnsignedInt
  updated_by_id                                         Int?                        @db.UnsignedInt
  admin_users_up_permissions_created_by_idToadmin_users admin_users?                @relation("up_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "up_permissions_created_by_id_fk")
  admin_users_up_permissions_updated_by_idToadmin_users admin_users?                @relation("up_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "up_permissions_updated_by_id_fk")
  up_permissions_role_links                             up_permissions_role_links[]

  @@index([created_by_id], map: "up_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "up_permissions_updated_by_id_fk")
}

model up_permissions_role_links {
  id               Int             @id @default(autoincrement()) @db.UnsignedInt
  permission_id    Int?            @db.UnsignedInt
  role_id          Int?            @db.UnsignedInt
  permission_order Float?
  up_permissions   up_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "up_permissions_role_links_fk")
  up_roles         up_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "up_permissions_role_links_inv_fk")

  @@unique([permission_id, role_id], map: "up_permissions_role_links_unique")
  @@index([permission_id], map: "up_permissions_role_links_fk")
  @@index([role_id], map: "up_permissions_role_links_inv_fk")
  @@index([permission_order], map: "up_permissions_role_links_order_inv_fk")
}

model up_roles {
  id                                              Int                         @id @default(autoincrement()) @db.UnsignedInt
  name                                            String?                     @db.VarChar(255)
  description                                     String?                     @db.VarChar(255)
  type                                            String?                     @db.VarChar(255)
  created_at                                      DateTime?                   @db.DateTime(6)
  updated_at                                      DateTime?                   @db.DateTime(6)
  created_by_id                                   Int?                        @db.UnsignedInt
  updated_by_id                                   Int?                        @db.UnsignedInt
  up_permissions_role_links                       up_permissions_role_links[]
  admin_users_up_roles_created_by_idToadmin_users admin_users?                @relation("up_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "up_roles_created_by_id_fk")
  admin_users_up_roles_updated_by_idToadmin_users admin_users?                @relation("up_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "up_roles_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_roles_created_by_id_fk")
  @@index([updated_by_id], map: "up_roles_updated_by_id_fk")
}

model up_users {
  id                                              Int                   @id @default(autoincrement()) @db.UnsignedInt
  username                                        String?               @db.VarChar(255)
  email                                           String?               @db.VarChar(255)
  provider                                        String?               @db.VarChar(255)
  password                                        String?               @db.VarChar(255)
  reset_password_token                            String?               @db.VarChar(255)
  confirmation_token                              String?               @db.VarChar(255)
  confirmed                                       Boolean?
  blocked                                         Boolean?
  created_at                                      DateTime?             @db.DateTime(6)
  updated_at                                      DateTime?             @db.DateTime(6)
  created_by_id                                   Int?                  @db.UnsignedInt
  updated_by_id                                   Int?                  @db.UnsignedInt
  admin_users_up_users_created_by_idToadmin_users admin_users?          @relation("up_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "up_users_created_by_id_fk")
  admin_users_up_users_updated_by_idToadmin_users admin_users?          @relation("up_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "up_users_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_users_created_by_id_fk")
  @@index([updated_by_id], map: "up_users_updated_by_id_fk")
}

model up_users_role_links {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int?      @db.UnsignedInt
  role_id    Int?      @db.UnsignedInt
  user_order Float?
  up_users   up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "up_users_role_links_fk")
  up_roles   up_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "up_users_role_links_inv_fk")

  @@unique([user_id, role_id], map: "up_users_role_links_unique")
  @@index([user_id], map: "up_users_role_links_fk")
  @@index([role_id], map: "up_users_role_links_inv_fk")
  @@index([user_order], map: "up_users_role_links_order_inv_fk")
}

model upload_folders {
  id                                                                                    Int                           @id @default(autoincrement()) @db.UnsignedInt
  name                                                                                  String?                       @db.VarChar(255)
  path_id                                                                               Int?                          @unique(map: "upload_folders_path_id_index")
  path                                                                                  String?                       @unique(map: "upload_folders_path_index") @db.VarChar(255)
  created_at                                                                            DateTime?                     @db.DateTime(6)
  updated_at                                                                            DateTime?                     @db.DateTime(6)
  created_by_id                                                                         Int?                          @db.UnsignedInt
  updated_by_id                                                                         Int?                          @db.UnsignedInt
  files_folder_links                                                                    files_folder_links[]
  admin_users_upload_folders_created_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: Restrict, map: "upload_folders_created_by_id_fk")
  admin_users_upload_folders_updated_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: Restrict, map: "upload_folders_updated_by_id_fk")
  upload_folders_parent_links_upload_folders_parent_links_folder_idToupload_folders     upload_folders_parent_links[] @relation("upload_folders_parent_links_folder_idToupload_folders")
  upload_folders_parent_links_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders_parent_links[] @relation("upload_folders_parent_links_inv_folder_idToupload_folders")

  @@index([created_by_id], map: "upload_folders_created_by_id_fk")
  @@index([updated_by_id], map: "upload_folders_updated_by_id_fk")
}

model upload_folders_parent_links {
  id                                                                       Int             @id @default(autoincrement()) @db.UnsignedInt
  folder_id                                                                Int?            @db.UnsignedInt
  inv_folder_id                                                            Int?            @db.UnsignedInt
  folder_order                                                             Float?
  upload_folders_upload_folders_parent_links_folder_idToupload_folders     upload_folders? @relation("upload_folders_parent_links_folder_idToupload_folders", fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "upload_folders_parent_links_fk")
  upload_folders_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders? @relation("upload_folders_parent_links_inv_folder_idToupload_folders", fields: [inv_folder_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "upload_folders_parent_links_inv_fk")

  @@unique([folder_id, inv_folder_id], map: "upload_folders_parent_links_unique")
  @@index([folder_id], map: "upload_folders_parent_links_fk")
  @@index([inv_folder_id], map: "upload_folders_parent_links_inv_fk")
  @@index([folder_order], map: "upload_folders_parent_links_order_inv_fk")
}
